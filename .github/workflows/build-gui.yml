name: generate C code && binary

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Cython
      run: python -m pip install cython pyinstaller

    - name: Run Cython
      run: |
        script=subs
        pyinstaller --onefile --hidden-import=tkinter $script.py
        cython $script.py --embed
        PYTHONLIBVER=python$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')$(python3-config --abiflags)
        gcc -Os $(python3-config --includes) $script.c -o GUI/subs_manager $(python3-config --ldflags) -l$PYTHONLIBVER

    - name: Upload binary to artifact
      uses: actions/upload-artifact@v3
      with:
        name: subs_manager
        path: GUI/subs_manager

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download binary from artifact
      uses: actions/download-artifact@v3
      with:
        name: subs_manager
        path: ./GUI

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: Release v1.0.${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./GUI/subs_manager
        asset_name: subs_manager
        asset_content_type: application/octet-stream

